###
###   Docker file for the ucis4eq services
###
version: '3.7'

services:
  # UCIS4EQ Slip Generator service  
  slipgen:
    build: 
      context: .
      dockerfile: deployment/dockers/Dockerfile-credentials
      args:
        SSH_PRV: $SSH_PRV
        PD_USER: $PD_USER   
        IMAGE: registry.gitlab.com/cheese-coe/ucis4eq/slipgen
    network_mode: "host"
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json      

    entrypoint: ["/bin/bash", "/opt/services/start.sh"]
    restart: always    
    depends_on:
      - DAL    

  # UCIS4EQ Salvus
  salvus:
    build: 
      context: .
      dockerfile: deployment/dockers/Dockerfile-credentials
      args:
        SSH_PRV: $SSH_PRV
        PD_USER: $PD_USER   
        IMAGE: registry.gitlab.com/cheese-coe/ucis4eq/salvus    
    network_mode: "host"
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json            
    entrypoint: ["/bin/bash", "/opt/services/start.sh"]
    restart: always    
    depends_on:
      - DAL    
      
  # UCIS4EQ Micro-services 
  microServices:
    image: registry.gitlab.com/cheese-coe/ucis4eq/microservices
    network_mode: "host"
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json    
    restart: always        
    depends_on:
      - DAL
  
  # UCIS4EQ Workflow Manager service  
  workflowManager:
    image: registry.gitlab.com/cheese-coe/ucis4eq/workflowmanager
    environment:
      - UCIS4EQ_LOCATION=${LOCATION}
    network_mode: "host"
    restart: always      

  # Mongo DataBase 
  DAL:
    network_mode: "host"
    image: mongo:4.2
    command: mongod --quiet --logpath /dev/null    
    ports:
      - "27017:27017"
    restart: always
    
  # UCIS4EQ Listener service
  listener:
    image: registry.gitlab.com/cheese-coe/ucis4eq/listener
    network_mode: "host"
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json            
    restart: always
    depends_on:
      - DAL
      - microServices   
      
  # UCIS4EQ Dashboard service
  dashboard:
    container_name: ucis4eq_dashboard     
    build: 
      context: .      
      dockerfile: deployment/dockers/Dockerfile-credentials
      args:
        SSH_PRV: $SSH_PRV
        PD_USER: $PD_USER   
        IMAGE: registry.gitlab.com/cheese-coe/ucis4eq/dashboard
    network_mode: "host"
    volumes:
      - ./data/DAL.json:/opt/DAL.json
