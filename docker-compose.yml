###
###   Docker file for the ucis4eq services
###
version: '3.7'

services:

  # UCIS4EQ Simulation Generator service
  simulation:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/simulation
    network_mode: "host"
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
      - HPC_RUN_PYCOMPSS=$HPC_RUN_PYCOMPSS
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts
    restart: always
    depends_on:
      - DAL

  # UCIS4EQ Slip Generator service  
  slipgen:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/slipgen
    network_mode: "host"
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts
    restart: always
    depends_on:
      - DAL

  # UCIS4EQ Salvus
  salvus:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/salvus
    network_mode: "host"
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts
    restart: always
    depends_on:
      - DAL

  # UCIS4EQ Micro-services
  microservices:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/microservices
    network_mode: "host"
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts
    restart: always
    depends_on:
      - DAL

  # UCIS4EQ Workflow Manager service
  workflowmanager:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/workflowmanager
    environment:
      - UCIS4EQ_LOCATION=${LOCATION}
      - COMPSS_HTTP_POOL_SIZE=100
      - HPC_RUN_PYCOMPSS=$HPC_RUN_PYCOMPSS

    volumes:
      - ./data/project.xml:/opt/project.xml
      - ./data/resources.xml:/opt/resources.xml
    network_mode: "host"
    restart: always

  # Mongo DataBase
  DAL:
    image: mongo:4.2
    command: mongod --quiet --logpath /dev/null
    ports:
      - "27017:27017"
    restart: always

  # UCIS4EQ Listener service
  listener:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/listener
    network_mode: "host"
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - ./data/Sites.json:/opt/Sites.json
    restart: always
    depends_on:
      - DAL
      - microservices

  # UCIS4EQ Dashboard service
  dashboard:
    image: registry.gitlab.bsc.es/wavephenomenagroup/ucis4eq/dashboard
    network_mode: "host"
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    volumes:
      - ./data/DAL.json:/opt/DAL.json
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts
