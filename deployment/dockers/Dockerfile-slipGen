# Obtain a clean python capable distribution
FROM python:2.7

# Set the working directory
WORKDIR /workspace

# Clone the BBP project 
#RUN git clone https://github.com/SCECcode/bbp.git bbp-19.4.0

# Install BBP
#RUN cd bbp-19.4.0/setup; ./easy_install_bbp_19.4.0.sh

# Install FFTW3
RUN apt-get update && apt-get install -y fftw3 libfftw3-dev gfortran

# Install Python dependencies
RUN pip install numpy matplotlib;

# Install some packages
RUN apt-get -qq update && apt-get -qq install -y python3-pip wget vim > /dev/null

# Install lapack and blas
RUN apt-get install -y gfortran libopenblas-dev liblapack-dev

# Install UCIS4EQ
RUN pip3 install --upgrade setuptools; 
RUN pip3 install scipy obspy --no-cache-dir
#RUN pip3 install numpy --no-cache-dir
RUN pip3 install flask pymongo requests; pip3 install webdavclient3 

# Copy and decompress the slip generator code into /opt directory
ADD deployment/dockers/thirdparties/gp-slip-gen.tar.gz /opt/

# Pass the SSH key (both public and private)
ARG SSH_PUB
ARG SSH_PRV

RUN mkdir -m 700 /root/.ssh; \
  touch /root/.ssh/known_hosts; \
  ssh-keyscan dt01.bsc.es > /root/.ssh/known_hosts; \
  ssh-keyscan mn1.bsc.es >> /root/.ssh/known_hosts; \
  ssh-keyscan mn2.bsc.es >> /root/.ssh/known_hosts; \
  ssh-keyscan mn3.bsc.es >> /root/.ssh/known_hosts
  
# Add the keys and set permissions
RUN echo "$SSH_PRV" > /root/.ssh/id_rsa && \
echo "$SSH_PUB" > /root/.ssh/id_rsa.pub && \
chmod 600 /root/.ssh/id_rsa && \
chmod 600 /root/.ssh/id_rsa.pub

# Prepare the service to run
RUN mkdir /opt/services;

# Expose the Flask application port
EXPOSE 5002

# Obtain the slipGenService App
RUN curl --request GET --header 'PRIVATE-TOKEN: glpat-8SmAHs1yjVmWq6-q_bkz' 'https://gitlab.com/api/v4/projects/12232768/repository/files/code%2Fservices%2FslipGenService.py/raw?ref=master' > /opt/services/slipGenService.py

# Prepare an script able to start the slip-generator service
RUN echo "python3 /opt/services/slipGenService.py" >> /opt/services/start.sh

# Start a shell
ENTRYPOINT ["/bin/bash", "/opt/scripts/launcher.sh"]
